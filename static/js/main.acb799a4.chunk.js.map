{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","_ref","total","perPage","currentPage","onPageChange","numberOfPages","Math","ceil","pageNumbers","isFirstPage","isLastPage","_jsxs","className","children","_jsx","cn","disabled","href","onClick","map","page","active","items","concat","App","setCurrentPage","useState","setPerPage","firstItem","lastItem","paginationFirstItem","paginationLastItem","visibleItems","slice","paginationText","id","value","onChange","event","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"4KAAO,SAASA,EAAWC,EAAcC,GACvC,MAAMC,EAAU,GAEhB,IAAK,IAAIC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCIF,MAAMG,EAAaC,IAKH,IALI,MACzBC,EAAK,QACLC,EAAO,YACPC,EAAc,EAAC,aACfC,GACeJ,EACf,MAAMK,EAAgBC,KAAKC,KAAKN,EAAQC,GAClCM,EAAcf,EAAW,EAAGY,GAE5BI,EAA8B,IAAhBN,EACdO,EAAaP,IAAgBE,EAKnC,OACEM,eAAA,MAAIC,UAAU,aAAYC,SAAA,CACxBC,cAAA,MAAIF,UAAWG,IAAG,YAAa,CAAEC,SAAUP,IAAeI,SACxDC,cAAA,KACE,UAAQ,WACRF,UAAU,YACVK,KAAK,QACL,gBAAeR,EACfS,QAASA,KACFT,GACHL,EAAsBD,EAZQ,IAchCU,SACH,WAIFL,EAAYW,KAAIC,GACfN,cAAA,MAEEF,UAAWG,IAAG,YAAa,CACzBM,OAAQlB,IAAgBiB,IACvBP,SAEHC,cAAA,KACE,UAAQ,WACRF,UAAU,YACVK,KAAK,KACLC,QAASA,KACHf,IAAgBiB,GAClBhB,EAAagB,IAEfP,SAEDO,KAfEA,KAmBTN,cAAA,MAAIF,UAAWG,IAAG,YAAa,CAAEC,SAAUN,IAAcG,SACvDC,cAAA,KACE,UAAQ,WACRF,UAAU,YACVK,KAAK,QACL,gBAAeP,EACfQ,QAASA,KACFR,GACHN,EAAsBD,EAjDQ,IAmDhCU,SACH,e,MCpET,MAAMS,EAAQ7B,EAAW,EAAG,IAAI0B,KAAItB,GAAC,QAAA0B,OAAY1B,KAEpC2B,EAAgBA,KAC3B,MAAOrB,EAAasB,GAAkBC,mBAAS,IACxCxB,EAASyB,GAAcD,mBAAS,GAGjCE,EAAY1B,GAAWC,EAAc,GACrC0B,EAAWD,EAAY1B,EACvB4B,EAAsBF,EAAY,EAClCG,EAAqBF,EALR,MAK6CA,EAE1DG,EAAe,IAAIV,GAAOW,MAAML,EAAWC,GAW3CK,EAAc,QAAAX,OAAWpB,EAAW,YAAAoB,OAAWO,EAAmB,OAAAP,OAAMQ,EAAkB,QAAAR,OAlB7E,GAkB8F,KAEjH,OACEZ,eAAA,OAAKC,UAAU,YAAWC,SAAA,CACxBC,cAAA,MAAAD,SAAI,0BAEJC,cAAA,KAAGF,UAAU,OAAO,UAAQ,OAAMC,SAC/BqB,IAGHvB,eAAA,OAAKC,UAAU,iBAAgBC,SAAA,CAC7BC,cAAA,OAAKF,UAAU,0BAAyBC,SACtCF,eAAA,UACE,UAAQ,kBACRwB,GAAG,kBACHvB,UAAU,eACVwB,MAAOlC,EACPmC,SAtBeC,IACvBX,GAAYW,EAAMC,OAAOH,OACzBX,EAAe,IAoBmBZ,SAAA,CAE1BC,cAAA,UAAQsB,MAAM,IAAGvB,SAAC,MAClBC,cAAA,UAAQsB,MAAM,IAAGvB,SAAC,MAClBC,cAAA,UAAQsB,MAAM,KAAIvB,SAAC,OACnBC,cAAA,UAAQsB,MAAM,KAAIvB,SAAC,YAIvBC,cAAA,SAAO0B,QAAQ,kBAAkB5B,UAAU,qBAAoBC,SAAC,sBAKlEC,cAACf,EAAU,CACTE,MAlDa,GAmDbC,QAASA,EACTC,YAAaA,EACbC,aA5CgBgB,IACpBK,EAAeL,MA6CbN,cAAA,MAAAD,SACGmB,EAAab,KAAIsB,GAChB3B,cAAA,MAAe,UAAQ,OAAMD,SAC1B4B,GADMA,WClEnBC,IAASC,OAAO7B,cAACU,EAAG,IAAKoB,SAASC,eAAe,W","file":"static/js/main.acb799a4.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import cn from 'classnames';\n\nimport { getNumbers } from '../../utils';\n\ninterface PaginationType {\n  total: number;\n  perPage: number;\n  currentPage?: number;\n  onPageChange: (page: number) => void;\n}\n\nexport const Pagination = ({\n  total,\n  perPage,\n  currentPage = 1,\n  onPageChange,\n}: PaginationType) => {\n  const numberOfPages = Math.ceil(total / perPage);\n  const pageNumbers = getNumbers(1, numberOfPages);\n\n  const isFirstPage = currentPage === 1;\n  const isLastPage = currentPage === numberOfPages;\n\n  const nextPage = (page: number) => page + 1;\n  const prevPage = (page: number) => page - 1;\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn('page-item', { disabled: isFirstPage })}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={isFirstPage}\n          onClick={() => {\n            if (!isFirstPage) {\n              onPageChange(prevPage(currentPage));\n            }\n          }}\n        >\n          «\n        </a>\n      </li>\n      {pageNumbers.map(page => (\n        <li\n          key={page}\n          className={cn('page-item', {\n            active: currentPage === page,\n          })}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href=\"#1\"\n            onClick={() => {\n              if (currentPage !== page) {\n                onPageChange(page);\n              }\n            }}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n      <li className={cn('page-item', { disabled: isLastPage })}>\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={isLastPage}\n          onClick={() => {\n            if (!isLastPage) {\n              onPageChange(nextPage(currentPage));\n            }\n          }}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\n\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\nimport './App.css';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42).map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [perPage, setPerPage] = useState(5);\n  const totalItems = 42;\n\n  const firstItem = perPage * (currentPage - 1);\n  const lastItem = firstItem + perPage;\n  const paginationFirstItem = firstItem + 1;\n  const paginationLastItem = lastItem > totalItems ? totalItems : lastItem;\n\n  const visibleItems = [...items].slice(firstItem, lastItem);\n\n  const onPageChange = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  const onPerPageChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  const paginationText = `Page ${currentPage} (items ${paginationFirstItem} - ${paginationLastItem} of ${totalItems})`;\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {paginationText}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={onPerPageChange}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={totalItems}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={onPageChange}\n      />\n      <ul>\n        {visibleItems.map(item => (\n          <li key={item} data-cy=\"item\">\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}